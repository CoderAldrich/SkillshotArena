--=======================================================================================
-- Generated by TypescriptToLua transpiler https://github.com/Perryvw/TypescriptToLua 
-- Date: Tue Mar 13 2018
--=======================================================================================
require("typescript_lualib")
modifier_silence_basic = {}
modifier_silence_basic.__index = modifier_silence_basic
function modifier_silence_basic.new(construct, ...)
    local instance = setmetatable({}, modifier_silence_basic)
    if construct and modifier_silence_basic.constructor then modifier_silence_basic.constructor(instance, ...) end
    return instance
end
function modifier_silence_basic.IsHidden(self)
    return false
end
function modifier_silence_basic.IsPurgable(self)
    return true
end
function modifier_silence_basic.GetAttributes(self)
    return MODIFIER_ATTRIBUTE_MULTIPLE
end
function modifier_silence_basic.OnCreated(self,kv)
    if IsServer() then
        local parent = self:GetParent()

        local silenceIndices = TS_ITE(kv.silenceIndices and (#kv.silenceIndices<1),function() return kv.silenceIndices end,function() return {1,2,3,4,5,6} end)

        local abil = self:GetCaster():GetCurrentActiveAbility()

        if abil:CanBeSilenced() and (TS_indexOf(silenceIndices, abil:GetAbilityIndex())~=-1) then
            self:GetParent():Interrupt()
        end
        local silencableAbilities = {}

        for i=0,8-1,1 do
            local ability = self:GetParent():GetAbilityByIndex(i)

            if (ability and ability:CanBeSilenced()) and (TS_indexOf(silenceIndices, i)~=-1) then
                ability:SetSilenceEndTime(self:GetRemainingTime())
                TS_push(silencableAbilities, i)
            end
        end
        CustomGameEventManager:Send_ServerToPlayer(self:GetParent():GetPlayerOwner(),"hero_silence_created",{silenceIndex=silencableAbilities})
    end
end
function modifier_silence_basic.OnDestroy(self)
    if IsServer() then
        local parent = self:GetParent()

        local silenceIndices = {}

        for i=0,8-1,1 do
            local ability = parent:GetAbilityByIndex(i)

            if ability and not ability:IsSilenced() then
                TS_push(silenceIndices, i)
            end
        end
        CustomGameEventManager:Send_ServerToPlayer(self:GetCaster():GetPlayerOwner(),"hero_silence_removed",{unsilenceIndex=silenceIndices})
    end
end
function modifier_silence_basic.GetEffectName(self)
    return "particles/generic_gameplay/generic_silenced.vpcf"
end
function modifier_silence_basic.GetEffectAttachType(self)
    return PATTACH_OVERHEAD_FOLLOW
end
