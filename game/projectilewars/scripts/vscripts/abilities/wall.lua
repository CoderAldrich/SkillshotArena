--=======================================================================================
-- Generated by TypescriptToLua transpiler https://github.com/Perryvw/TypescriptToLua 
-- Date: Tue Mar 13 2018
--=======================================================================================
require("typescript_lualib")
require("abilities/base_ability")
wall = base_ability.new()
wall.__index = wall
wall.__base = base_ability
function wall.new(construct, ...)
    local instance = setmetatable({}, wall)
    if construct and wall.constructor then wall.constructor(instance, ...) end
    return instance
end
function wall.OnSpellStart(self)
    local direction = nil

    local origin = nil

    local caster = self:GetCaster()

    local distance = nil

    if self.endPos then
        direction=(self.endPos-self.startPos)
        distance=direction:Length2D()
        direction=direction:Normalized()
        origin=(self.startPos+(direction*(distance/2)))
    else
        direction=caster:GetForwardVector()
        origin=(caster:GetAbsOrigin()+(direction*200))
        direction=GetRightPerpendicular(direction)
    end
    distance=500
    local locs = {(direction*distance)/2,(-direction*distance)/2}

    local wall = Physics2D:CreatePolygon(origin,locs,nil)

    wall.caster=caster
    for i=0,#locs-1,1 do
        locs[i+1]=(locs[i+1]+origin)
    end
    local wallParticles = CreateProjectileWall(wall,locs)

    self:ConsumeCharge()
    Timers:CreateTimer(5,function()
        if wall and not wall:IsNull() then
            if wallParticles then
                for _, p in ipairs(wallParticles) do
                    ParticleManager:DestroyParticle(p,true)
                    ParticleManager:ReleaseParticleIndex(p)
                end
            end
            UTIL_Remove(wall)
        end
    end
)
    self.startPos=nil
    self.endPos=nil
end
